{"componentChunkName":"component---src-templates-blog-post-js","path":"/aboutWebpack/","result":{"data":{"site":{"siteMetadata":{"title":"neekoblog"}},"markdownRemark":{"id":"4ff3fcb4-b458-5e1c-8861-b2bc57448e0f","excerpt":"webpack은 Javascript 애플리케이션을 위한 Static Module Bundler이다. 애플리케이션을 처리할 때 필요한 모듈을 매핑하고 하나 이상의 번들을 생성하는 'Dependency Graph'를 만든다. Dependency Graph…","html":"<p>webpack은 Javascript 애플리케이션을 위한 Static Module Bundler이다.</p>\n<p>애플리케이션을 처리할 때 필요한 모듈을 매핑하고 하나 이상의 번들을 생성하는 'Dependency Graph'를 만든다.</p>\n<h3>Dependency Graph</h3>\n<p>어떤 파일이 다른 파일에 의존할때마다 webpack은 이걸 의존성으로 취급한다.</p>\n<h4>그러면 어떻게 의존되어있는 것을 알까?</h4>\n<p>먼저 webpack은 애플리케이션을 처리할 때, command line 또는 설정파일(webpack.config.js)에 정의된 모듈 목록에서부터 처리를 시작한다.\n이걸 Entry Point라고 한다.</p>\n<p>Entry Point에서 webpack은 필요한 모든 모듈을 포함하는 Dependency Graph룰 재귀적으로 빌드한 다음, 모든 모듈을 브라우저에 의해 로드 되는 작은 수의 번들로 묶는다.</p>\n<p>이렇게 되면 HTTP/1.1의 경우 요청 간의 대기시간의 최적화 할 수 있으므로 빠르게 로드 할 수 있다.</p>","frontmatter":{"title":"웹팩 (1)","date":"January 14, 2025","description":"웹팩 개념 자세히 보기"}},"previous":{"fields":{"slug":"/http/"},"frontmatter":{"title":"HTTP 개요 및 기초 이해"}},"next":{"fields":{"slug":"/cdn/"},"frontmatter":{"title":"CDN이란?"}}},"pageContext":{"id":"4ff3fcb4-b458-5e1c-8861-b2bc57448e0f","previousPostId":"c82ed015-7046-540a-a40d-dacd47bb15aa","nextPostId":"cf5dd919-130c-5a9e-8c75-5e78308b4c85"}},"staticQueryHashes":["1469588348","2841359383"],"slicesMap":{}}