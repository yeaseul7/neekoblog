{"version":3,"file":"component---src-pages-about-js-19f8c0119bbf2706bf0f.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/styles/profileStyle.js","webpack://gatsby-starter-blog/./src/pages/about.js","webpack://gatsby-starter-blog/./src/content/profile.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const ProfileLinkList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  margin: 0;\n  @media (max-width: 768px) {\n    margin-left: auto;\n  }\n  & > li {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 5px;\n    & > a {\n      font-size: 0.8rem;\n    }\n  }\n`\nexport const ProfileTitle = styled.p`\n  font-size: xxx-large;\n  font-weight: 600;\n  margin: 0 0 0 15px;\n  color: #eaeaea;\n  @media (max-width: 768px) {\n    font-size: x-large;\n  }\n`\nexport const ProfileDiv = styled.div`\n  justify-content: space-between;\n  align-items: flex-start;\n  display: flex;\n  align-items: flex-start;\n  margin: 0;\n  margin-left: 15px;\n  margin-top: 50px;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n    margin-left: 0;\n  }\n`\nexport const CareerList = styled.li`\n  list-style: none;\n`\nexport const CareerBox = styled.div`\n  margin-top: 1rem;\n  gap: 20px;\n  display: flex;\n  padding: 1rem;\n  border-radius: 15px;\n  & > .imgBox {\n    font-size: 0.8rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    width: 16%;\n    & > p {\n      text-align: center;\n      font-size: 0.7rem;\n    }\n  }\n  & > .careerTextBox {\n    width: 100%;\n    @media (max-width: 768px) {\n      font-size: 0.8rem;\n    }\n    & > .careerjob {\n      margin-bottom: 5px;\n      font-size: 0.9rem;\n      color: #a2a2a2;\n    }\n    & > .careerTitle {\n      margin-bottom: 5px;\n      font-size: large;\n      font-weight: 600;\n    }\n  }\n`\nexport const DetailBox = styled.div`\n  padding: 1rem;\n  border: 1px solid #c7d6ff;\n`\n\nexport const ListTitle = styled.p`\n  margin: 0;\n  font-size: xx-large;\n  font-weight: 600;\n  @media (max-width: 768px) {\n    font-size: x-large;\n  }\n`\nexport const IntroBox = styled.div`\n  padding: 1rem;\n  border-radius: 15px;\n  margin: 1rem;\n  color: #fff;\n`\nexport const TagBox = styled.div`\n  margin: 10px auto;\n  display: flex;\n  gap: 5px;\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n  & > .tags {\n    padding: 3px;\n    width: fit-content;\n    background: #454545;\n    font-size: 0.7rem;\n    color: #ff6363;\n  }\n`\nexport const dogLottieStyle = {\n  height: \"100%\",\n  width: \"100%\",\n}\nexport const DogLottieWrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  @media (max-width: 768px) {\n    height: 50px;\n    width: 50px;\n  }\n`\nexport const ProfileHeader = styled.div`\n  display: flex;\n  height: fit-content;\n  align-items: center;\n`\nexport const SectionDiv = styled.div`\n  display: flex;\n  align-items: center;\n`\n","import React from \"react\"\nimport { graphql, useStaticQuery, Link } from \"gatsby\"\nimport {\n  ProfileLinkList,\n  ProfileDiv,\n  CareerList,\n  CareerBox,\n  ListTitle,\n  DetailBox,\n  IntroBox,\n  TagBox,\n  ProfileTitle,\n  dogLottieStyle,\n  ProfileHeader,\n  SectionDiv,\n  DogLottieWrapper,\n} from \"../styles/profileStyle\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport walkingDog from \"../lottie/walkingDog.json\"\nimport { getCareerList } from \"../content/profile\"\n\nconst Profile = () => {\n  const data = useStaticQuery(linkListQuery)\n  const [Lottie, setLottie] = React.useState(null)\n\n  React.useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      import(\"lottie-react\").then(module => {\n        setLottie(module.default)\n      })\n    }\n  }, [])\n\n  const careerList = getCareerList(data)\n  const linkList = [\n    {\n      src: getImage(data.profileImage),\n      imgAlt: \"Profile picture\",\n      aLabel: \"Dev Blog\",\n    },\n    {\n      src: getImage(data.githubImage),\n      imgAlt: \"Github\",\n      aLabel: \"github.com/yeaseul7\",\n    },\n    {\n      src: getImage(data.gmailImage),\n      imgAlt: \"Gmail\",\n      aLabel: \"cutie32769@gmail.com\",\n    },\n    {\n      src: getImage(data.naverImage),\n      imgAlt: \"Naver\",\n      aLabel: \"Naver Blog\",\n    },\n  ]\n\n  return (\n    <main className=\"global-wrapper\">\n      <ProfileDiv>\n        <ProfileHeader>\n          <ProfileTitle>NEEKO RESUME</ProfileTitle>\n          <DogLottieWrapper>\n            {Lottie && (\n              <Lottie\n                animationData={walkingDog}\n                loop={true}\n                style={dogLottieStyle}\n              />\n            )}\n          </DogLottieWrapper>\n        </ProfileHeader>\n        <ProfileLinkList>\n          {linkList.map(el => {\n            return (\n              <li key={el.imgAlt}>\n                <a href=\"/\" type=\"blank\" alt=\"Neeko Dev Blog\">\n                  {el.aLabel}\n                </a>\n                <GatsbyImage image={el.src} alt={el.imgAlt} />\n              </li>\n            )\n          })}\n        </ProfileLinkList>\n      </ProfileDiv>\n      <IntroBox>\n        <h3 style={{ margin: \"10px auto\" }}>\n          주도적으로 성장하는 개발자 이예슬입니다.\n        </h3>\n        <br />\n        '프론트와 어울림' 스터디를 주도하여 JavaScript의 핵심 개념인 Hoisting,\n        실행 컨텍스트, 웹 표준, 브라우저 동작 원리 등을 학습했습니다.\n        <br />\n        각 주제를 팀원들에게 강의하면서, 팀장의 역할로 Notion과 Discord를 활용해\n        팀원들이 학습 내용을 체계적으로 복습하고 공유할 수 있도록 적극적으로\n        이끌었습니다.\n        <br />\n        또한, 개인 블로그에 학습 내용을 정리해 외부 피드백을 끊임없이 받아들이며\n        지속적으로 성장하고 있습니다.\n        <br />\n        <Link to=\"/\">개인 블로그 들어가기</Link>\n      </IntroBox>\n      <SectionDiv>\n        <ListTitle>Career</ListTitle>\n      </SectionDiv>\n      <hr />\n      <ul>\n        {careerList.map(career => {\n          return (\n            <CareerList key={career.careerName}>\n              <CareerBox>\n                <div className=\"imgBox\">\n                  <GatsbyImage image={career.img} alt={career.imgAlt} />\n                  <p>{career.period}</p>\n                </div>\n                <div className=\"careerTextBox\">\n                  <p className=\"careerTitle\">{career.careerName}</p>\n                  <p className=\"careerjob\">{career.job}</p>\n                  {career.doitList.map(el => {\n                    return (\n                      <DetailBox key={el.doitTitle}>\n                        {el.todoList.map(e => {\n                          return (\n                            <p key={e} style={{ padding: \"5px\", margin: \"0\" }}>\n                              - {e}\n                            </p>\n                          )\n                        })}\n                        <TagBox>\n                          {el.techList.map(tech => {\n                            return (\n                              <div className=\"tags\" key={tech}>\n                                {tech}\n                              </div>\n                            )\n                          })}\n                        </TagBox>\n                      </DetailBox>\n                    )\n                  })}\n                </div>\n              </CareerBox>\n            </CareerList>\n          )\n        })}\n      </ul>\n      {/* <SectionDiv>\n        <ListTitle>Award</ListTitle>\n        <DogLottieWrapper>\n          <Lottie animationData={trophy} loop={3} style={dogLottieStyle} />\n        </DogLottieWrapper>\n      </SectionDiv>\n      <hr />\n      <ul>\n        {careerList.map(career => {\n          return (\n            <CareerList key={career.careerName}>\n              <CareerBox>\n                <div className=\"imgBox\">\n                  <GatsbyImage image={career.img} alt={career.imgAlt} />\n                  <p>{career.period}</p>\n                </div>\n                <div className=\"careerTextBox\">\n                  <p className=\"careerTitle\">{career.careerName}</p>\n                  <p className=\"careerjob\">{career.job}</p>\n                  {career.doitList.map(el => {\n                    return (\n                      <DetailBox key={el.doitTitle}>\n                        {el.todoList.map(e => {\n                          return <p key={e}>{e}</p>\n                        })}\n                        {el.techList.map(tech => {\n                          return <div key={tech}>{tech}</div>\n                        })}\n                      </DetailBox>\n                    )\n                  })}\n                </div>\n              </CareerBox>\n            </CareerList>\n          )\n        })}\n      </ul> */}\n    </main>\n  )\n}\n\nexport default Profile\nexport const linkListQuery = graphql`\n  query {\n    profileImage: file(relativePath: { eq: \"porfile/neekoblog.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 20\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n    githubImage: file(relativePath: { eq: \"porfile/github.jpeg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 20\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n    gmailImage: file(relativePath: { eq: \"porfile/gmail.jpeg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 20\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n    naverImage: file(relativePath: { eq: \"porfile/naver.jpeg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 20\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n    linkedinImage: file(relativePath: { eq: \"porfile/linkedin.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 20\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n    toinfinityImg: file(relativePath: { eq: \"porfile/toinfinity.jpeg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 90\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n    qualisoftImg: file(relativePath: { eq: \"porfile/quali.jpeg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 90\n          placeholder: BLURRED\n          formats: [AUTO, WEBP, AVIF]\n        )\n      }\n    }\n  }\n`\n","import { getImage } from \"gatsby-plugin-image\"\n\nexport const getCareerList = data => [\n  {\n    img: getImage(data.qualisoftImg),\n    imgAlt: \"qualiSoftImg\",\n    careerName: \"QualiSoft\",\n    period: \"2024.04 ~ present\",\n    job: \"Software Engineer\",\n    doitList: [\n      {\n        doitTitle: \"QualiSoft\",\n        todoList: [\n          \" GC녹십자셀 CRM 페이지 개발\",\n          \"Vue2로 프레임워크 변경 작업 수행\",\n          \"사내 서버 기반 사이트 관리 페이지 개발 및 유지보수\",\n          \"코드 리팩토링 및 최적화를 통해 로딩 시간 단축\",\n        ],\n        techList: [\n          \"Vue2\",\n          \"Azure\",\n          \"MSDynamics365\",\n          \"Node.js\",\n          \"Docker Notion\",\n        ],\n      },\n    ],\n  },\n  {\n    img: getImage(data.toinfinityImg),\n    imgAlt: \"toinfinityImg\",\n    careerName: \"To-infinity\",\n    period: \"2023.11 ~ 2024.02\",\n    job: \"Software Engineer\",\n    doitList: [\n      {\n        doitTitle: \"infinity\",\n        todoList: [\n          \"메인 프론트엔드 개발자 역할 담당 및 화면 디자인 및 설계 진행\",\n          \"촬영 기능 개발\",\n          \"마이페이지 기능 개발\",\n          \"스타일 코드 모듈화 및 유지보수성 개선\",\n        ],\n        techList: [\"Flutter\", \"Vue2\", \"Figma\", \"Jira\", \"Spring\"],\n      },\n    ],\n  },\n]\n"],"names":["ProfileLinkList","styled","ul","withConfig","displayName","componentId","ProfileTitle","p","ProfileDiv","div","CareerList","li","CareerBox","DetailBox","ListTitle","IntroBox","TagBox","dogLottieStyle","height","width","DogLottieWrapper","ProfileHeader","SectionDiv","Profile","data","useStaticQuery","linkListQuery","Lottie","setLottie","React","window","then","module","default","careerList","img","getImage","qualisoftImg","imgAlt","careerName","period","job","doitList","doitTitle","todoList","techList","toinfinityImg","getCareerList","linkList","src","profileImage","aLabel","githubImage","gmailImage","naverImage","className","animationData","walkingDog","loop","style","map","el","key","href","type","alt","GatsbyImage","image","margin","Link","to","career","e","padding","tech"],"sourceRoot":""}