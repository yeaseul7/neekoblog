{"version":3,"file":"component---src-pages-index-js-cf4558e590b58893ba73.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/styles/recentBox.js","webpack://gatsby-starter-blog/./src/components/recentpost.js","webpack://gatsby-starter-blog/./src/styles/mainStyle.js","webpack://gatsby-starter-blog/./src/components/categorylist.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const RecentPosts = styled.div`\n  padding: 1rem;\n  border-radius: 15px;\n  & > .title {\n    margin: 0;\n  }\n`\nexport const BoxWrap = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  padding: 0;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\nexport const CubeItem = styled.li`\n  border: 1px solid white;\n  border-radius: 10px;\n  list-style: none;\n  flex: 1 1 300px;\n  max-width: calc(50% - 0.5rem);\n  & > a {\n    padding: 1rem;\n    width: 100%;\n    & > .content {\n      gap: 20px;\n      display: flex;\n      height: 100%;\n      flex-direction: column;\n      justify-content: space-between;\n      & > .date {\n        color: gray;\n        font-size: 12px;\n      }\n    }\n  }\n  @media (max-width: 768px) {\n    max-width: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n  }\n`\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { RecentPosts, BoxWrap, CubeItem } from \"../styles/recentBox\"\nimport { Link } from \"gatsby\"\n\nconst RecentPostBox = () => {\n  const data = useStaticQuery(graphql`\n    query RecentPostQuery {\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { date: { gte: \"2024-01-01\", lt: \"2026-01-01\" } }\n        }\n        sort: { fields: frontmatter___date, order: DESC }\n        limit: 4\n      ) {\n        nodes {\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <RecentPosts>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <p className=\"title\">Recent Posts</p>\n      </div>\n      <BoxWrap className=\"list\">\n        {posts.map(post => (\n          <CubeItem key={post.fields.slug}>\n            <Link\n              to={post.fields.slug}\n              style={{ display: \"block\", height: \"100%\" }}\n            >\n              <div className=\"content\">\n                <div>\n                  <b>{post.frontmatter.title}</b>\n                  <p>{post.frontmatter.description}</p>\n                </div>\n                <p className=\"date\">{post.frontmatter.date}</p>\n              </div>\n            </Link>\n          </CubeItem>\n        ))}\n      </BoxWrap>\n    </RecentPosts>\n  )\n}\nexport default RecentPostBox\n","import styled, { keyframes } from \"styled-components\"\n\nexport const hoverAnimation = keyframes`\n  0% {\n    transform: rotate(10deg)\n  }\n  100% {\n    transform: rotate(-10deg);\n  }\n`\nexport const bounce = keyframes`\n  0% {\n    transform: translateY(0px)\n  }\n  50%{\n    transform: translateY(-10px)\n  }\n  100% {\n    transform: translateY(0px)\n  }\n`\nexport const ArticleBox = styled.article`\n  padding: 10px;\n  transition: box-shadow 0.3s ease-in-out;\n  box-shadow: none;\n  border-radius: 10px;\n\n  & > header {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n  & > section {\n    font-size: 0.8rem;\n    & > p {\n      color: #b4b4b4;\n    }\n  }\n`\n\nexport const ArticleMain = styled.ol`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 10px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\nexport const ArticleTitle = styled.p`\n  margin: 0 0 0.5rem;\n  font-weight: 600;\n  & > a {\n    text-decoration: none;\n    font-size: 1.1rem;\n    color: #333333;\n  }\n`\nexport const ArticleList = styled.li`\n  width: 100%;\n  border-radius: 5px;\n`\nexport const ArticlePageList = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  & > li {\n    margin: 0 1rem 0 0;\n    & > article {\n      width: 100%;\n    }\n    & > button {\n      padding: 0.5rem 1rem;\n      background: none;\n      border: none;\n      border-radius: 15px;\n      &:hover {\n        background: #d4a373;\n        transition: background-color 0.5s ease;\n      }\n    }\n  }\n`\nexport const ListDiv = styled.ul`\n  position: relative;\n  height: auto;\n  background: none;\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: flex-start;\n  margin: 1rem 0 0 0;\n  padding: 0;\n`\nexport const NavLi = styled.li`\n  padding: 5px 10px;\n  margin: 0 auto;\n  color: #736f58;\n  &:hover {\n    color: #fffdf4;\n    animation: ${hoverAnimation} 0.5s ease-in-out infinite alternate;\n  }\n`\n","import * as React from \"react\"\nimport { ListDiv, NavLi } from \"../styles/mainStyle\"\n\nconst CategoryList = ({ data, onCategorySelect }) => {\n  let categories = data.map(post => {\n    if (post.frontmatter.category !== \"Profile\") {\n      return post.frontmatter.category\n    }\n    return null\n  })\n  categories = [\n    ...new Set(\n      categories.map(category => category && category.trim()).filter(Boolean)\n    ),\n  ]\n  return (\n    <ListDiv>\n      <NavLi onClick={() => onCategorySelect(\"\")}>\n        <p>All</p>\n      </NavLi>\n      {categories.map((category, index) => (\n        <NavLi key={index} onClick={() => onCategorySelect(category)}>\n          <p>{category}</p>\n        </NavLi>\n      ))}\n    </ListDiv>\n  )\n}\nexport default CategoryList\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport RecentPostBox from \"../components/recentpost\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport CategoryList from \"../components/categorylist\"\nimport {\n  ArticleBox,\n  ArticleMain,\n  ArticleTitle,\n  ArticleList,\n  ArticlePageList,\n} from \"../styles/mainStyle\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `neekoblog`\n  const posts = data.allMarkdownRemark.nodes\n  const [selectedCategory, setSelectedCategory] = React.useState(\"\")\n  const [lookLoiie, setLookLoiie] = React.useState(false)\n  const [PostPagerList, setPostPagerList] = React.useState([])\n  const [pageNum, setPageNum] = React.useState(0)\n\n  React.useEffect(() => {\n    // filteredPosts 계산을 useEffect 내부로 이동\n    const filteredPosts = selectedCategory\n      ? posts.filter(post => post.frontmatter.category === selectedCategory)\n      : posts\n\n    if (filteredPosts.length >= 2) {\n      const chunkSize = 9\n      let chunkedPosts = []\n\n      for (let i = 0; i < filteredPosts.length; i += chunkSize) {\n        // 배열을 9개씩 잘라서 chunkedPosts에 저장\n        chunkedPosts.push(filteredPosts.slice(i, i + chunkSize))\n      }\n\n      // 잘라진 배열을 저장 (상태로 관리)\n      setPostPagerList(chunkedPosts)\n    } else {\n      setPostPagerList([filteredPosts])\n    }\n  }, [selectedCategory, posts]) // posts와 selectedCategory를 의존성으로 추가\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\"gatsby-source-filesystem\" 플러그인이 포스트를 찾지 못했습니다!</p>\n      </Layout>\n    )\n  }\n\n  const handleLookLoiie = () => {\n    setLookLoiie(!lookLoiie)\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      {selectedCategory !== \"\" ? <div></div> : <RecentPostBox />}\n      <CategoryList data={posts} onCategorySelect={setSelectedCategory} />\n      <ArticleMain>\n        {PostPagerList[pageNum]?.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          let shortenedTitle =\n            title.length > 20 ? title.substring(0, 20) + \"...\" : title\n          const postDate = post.frontmatter.date || \"날짜 없음\"\n          // 날짜 포맷 변경\n          const formattedDate = new Date(postDate).toLocaleDateString(\"ko-KR\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n          })\n\n          return (\n            <ArticleList\n              key={post.fields.slug}\n              onMouseOver={() => handleLookLoiie()}\n              className=\"category-content-list\"\n            >\n              <ArticleBox\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <ArticleTitle>\n                    <Link\n                      to={post.fields.slug}\n                      itemProp=\"url\"\n                      style={{ color: \"aliceblue\" }}\n                    >\n                      <span itemProp=\"headline\">{shortenedTitle}</span>\n                    </Link>\n                  </ArticleTitle>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: formattedDate,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </ArticleBox>\n            </ArticleList>\n          )\n        })}\n      </ArticleMain>\n      <ArticlePageList>\n        {PostPagerList.map((postList, index) => {\n          return (\n            <li key={index}>\n              <button onClick={() => setPageNum(index)}>{index}</button>\n            </li>\n          )\n        })}\n      </ArticlePageList>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["RecentPosts","styled","div","withConfig","displayName","componentId","BoxWrap","ul","CubeItem","li","RecentPostBox","posts","useStaticQuery","allMarkdownRemark","nodes","React","style","display","alignItems","className","map","post","key","fields","slug","Link","to","height","frontmatter","title","description","date","hoverAnimation","keyframes","ArticleBox","article","ArticleMain","ol","ArticleTitle","p","ArticleList","ArticlePageList","ListDiv","NavLi","_ref","data","onCategorySelect","categories","category","_toConsumableArray","Set","trim","filter","Boolean","onClick","index","_data$site$siteMetada","_PostPagerList$pageNu","location","siteTitle","site","siteMetadata","selectedCategory","setSelectedCategory","lookLoiie","setLookLoiie","PostPagerList","setPostPagerList","pageNum","setPageNum","filteredPosts","length","chunkSize","chunkedPosts","i","push","slice","Layout","CategoryList","shortenedTitle","substring","postDate","formattedDate","Date","toLocaleDateString","year","month","day","onMouseOver","itemScope","itemType","itemProp","color","dangerouslySetInnerHTML","__html","postList","Head","Seo"],"sourceRoot":""}